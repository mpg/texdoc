#!/usr/bin/perl

# Manuel Pégourié-Gonnard, 2009. WTFPL v2.

my $usage = "Usage: $0 <tlbin>";

# Checks aliases for texdoc in the TL installation corresponding to <tlbin>

use warnings;

my $tlbin = shift;
$tlbin and -d $tlbin and -x "$tlbin/texdoc" or die "$usage\n";

# Set PATH in order to use tlbin first and kill local trees
$ENV{'PATH'} = "$tlbin:$ENV{PATH}";
$ENV{'TEXMFLOCAL'} = '/no/such/directory';
$ENV{'TEXMFHOME'} = '/no/such/directory';

# Various constants
chomp(my $texmfmain = `kpsewhich -var-value TEXMFMAIN`);
my $alias_file = "$texmfmain/texdoc/texdoc.cnf";
my $texdoc = 'texdoc -a -I -l -v2';

# Report a problem
sub problem { 
    my ($msg, $alias) = @_;
    print "$.\t$msg\t$alias\n";
}

# Return the filename without exension from a line like
# ' 1 /path/to/file.ext'
sub noext { 
    s/^\s*\d* (.*)\..*$/$1/;
    return $_;
}

# Remembers which alias were already seen
my %seen;

# Checks one alias
sub check_alias {
    my ($name) = @_;

    # Is the alias duplicated?
    problem("duplicated", $name) if $seen{$name}++;

    # Are some results found for alias?
    chomp (my $result = `$texdoc $name`);
    my $exit_code = $? >> 8;
    if ($exit_code == 2) {
        problem("not found", $name);
        return;
    }

    # Are there many different results?
    my @results = sort map (noext($_), split ("\n", $result));
    my $prev = 'nosuchfile';
    if (grep ($_ ne $prev && (($prev) = $_), @results) > 1) {
        problem("nonspecific", $name); }
}

open ALIAS, $alias_file or die "No $alias_file found.";
while (<ALIAS>) {
    # remove comments and unmeaningful whitespace
    s/#.*//;
    s/^\s*//;
    s/\s*$//;
    # we are only interested in aliase
    next unless (/^alias +([^ ]+) *=/);
    check_alias($1);
}
close ALIAS;

