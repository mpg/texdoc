-- configuration handling for texdoc
--[[ 
Copyright 2008, 2009 Manuel Pégourié-Gonnard
Distributed under the terms of the GNU GPL version 3 or later.
See texdoc.tlu for details.
--]]

local L = {}
load_env(L, {
    'export_symbols',
    'string', 'table', 'os', 'kpse', 'lfs', 'io',
    'arg',
    'ipairs', 'pairs', 'tonumber', 'tostring', 'setmetatable', 'next', 'print',
    'assert', 'error',
    'err_print', 'deb_print',
    'C',
    'config',
})

-- alias is local to this file
local alias = {}

-- scores
local original      = 0
local alias_default = 20

-- turn a name into a suitable alias entry
function make_alias(pat, score)
    score = score or alias_default
    return {
        name        = pat,
        adjscore    = score,
    }
end

-- add an alias value for a key
function add_alias(key, value, score)
    if not alias[key] then
        alias[key] = { make_alias(key, original) }
    end
    table.insert(alias[key], make_alias(value, score))
end

-- get patterns for a name
function get_patterns(name)
    local n = string.lower(name)
    if config.mode ~= 'regex' and config.alias_switch and alias[n] then
        return alias[n]
    else
        return { make_alias(name) }
    end
end

-- interpret a confline as an alias setting or return false
function confline_to_alias(line, file, pos)
    local key, val = string.match(line, '^alias%s+([%w%p]+)%s*=%s*(.+)')
    if key and val then
        add_alias(string.lower(key), val)
        return true
    end
    return false
end

-- finally export a few symbols
export_symbols(L, {
    'confline_to_alias',
    'get_patterns',
})
