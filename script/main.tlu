-- texdoc's main()
--[[ 
Copyright 2008, 2009 Manuel Pégourié-Gonnard
Distributed under the terms of the GNU GPL version 3 or later.
See texdoc.tlu for details.
--]]

-----------------------------   initialisations   ------------------------------

-- kpse is already initialised in texdoc.tlu

-- setup config options and aliases from various places
setup_config_and_alias()

-- get the texdocs variable
get_texdocs()

------------------------   looping over the arguments   ------------------------

-- make sure we actually have argument(s)
assert_arg_not_empty ()

-- initialising and saving a few values
exit_code = 0
local no_regex = (config.mode ~= 'regex')
local real_get_docfiles = get_docfiles

-- the actual loop
for _, docname in ipairs(arg) do
    -- inform the user which arg is treated if more than one was provided
    if arg[2] then
        print ("*** Results for: "..docname.." ***")
    end
    -- apply aliases if relevant
    if config.alias_switch and alias[docname] then
        err_print (docname.." aliased to "..alias[docname], 'info')
        docname = alias[docname]
    end
    -- exceptions for arguments with extension given
    if config.mode ~= 'regex' then
        docname_base, docname_ext = string.match (docname, '^(.*)%.(.*)$')
        if docname_ext == 'sty' then
            err_print ("using special search mode for sty files", 'info')
            get_docfiles = get_docfiles_sty
        end
    end
    -- get results and sort them
    local docfiles = get_docfiles(docname, no_regex)
    sort_docfiles(docfiles)
    -- deliver results to the user
    if not docfiles[1] then apologize ('notfound', docname) end
    local showall = (config.mode == 'regex') or (config.mode == 'search')
    if not showall and not docfiles[1].exact then
        showall = true
        err_print ("No exact match, trying full search mode.", "info")
    end
    if (config.mode == 'view')
        or (config.mode == 'mixed' and not docfiles[2]) then
        view_doc(docfiles[1])
    else
        print_menu(docfiles, showall)
    end
    -- restore possibly diverted values
    get_docfiles = real_get_docfiles
end

os.exit(exit_code)
